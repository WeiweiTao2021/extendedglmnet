% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.r
\name{predict.extendglmnet}
\alias{predict.extendglmnet}
\alias{extendedglmnet.predict}
\title{make predictions from an extendedglmnet object.}
\usage{
\method{extendedglmnet}{predict}(
  object,
  newx,
  type = c("link", "class", "response"),
  family = "gaussian",
  levels = c(0, 1)
)
}
\arguments{
\item{newx}{Matrix of new values for \code{x} at which predictions are to be
made. Must be a matrix.}

\item{type}{Type of prediction required. For continuous y's, only predicted responses will be returned.
Type \code{"link"} gives the linear predictors for \code{"binomial"} models.
Type \code{"response"} gives the fitted probabilities for \code{"binomial"} models.
Type \code{"class"} applies only to \code{"binomial"} models, and produces the class label corresponding to
the maximum probability.}

\item{family}{can be binomial or gaussian depending on y types.}

\item{levels}{specify the binary response variable levels of factors.}

\item{fit}{Fitted \code{"extendedglmnet"} model object.}
}
\value{
fitted values.
}
\description{
Similar to other predict methods, this functions predicts fitted values and classes
(for binary endpoint only) from a fitted \code{"extendedglmnet"} object.
}
\examples{

size = 200
x = matrix(rnorm(210*size),ncol=210)
z = 1 + 2*x[,1] + 3*x[,40] - 4*x[,50] + 3*x[,210]
pr = 1/(1+exp(-z))
y = rbinom(size,1,pr)

fit.rl <- extendedglmnet(x, y, family = "binomial", type = "random lasso", q1 = 150, q2 = 150)
ypred.rl <- predict.extendglmnet(fit.rl, x, type="class", family = "binomial")

}
\seealso{
\code{\link{extendedglmnet}}, and \code{\link{print.extendglmnet}}, and \code{\link{evaluation}} methods.
}
\author{
Weiwei Tao \email{tww101928@gmail.com}
}
